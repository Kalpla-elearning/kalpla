// Referral System Schema for Kalpla Platform
// This extends the main schema with referral functionality

model ReferralCode {
  id          String   @id @default(cuid())
  code        String   @unique
  userId      String
  user        User     @relation("ReferralCodeOwner", fields: [userId], references: [id], onDelete: Cascade)
  isActive    Boolean  @default(true)
  maxUses     Int?     // null = unlimited
  currentUses Int      @default(0)
  discount    Float?   // Discount percentage
  reward      Float?   // Reward amount for referrer
  expiresAt   DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  referrals   Referral[] @relation("ReferralCodeUsed")
  rewards     ReferralReward[] @relation("ReferralCodeRewards")

  @@map("referral_codes")
}

model Referral {
  id              String   @id @default(cuid())
  referrerId      String   // User who made the referral
  refereeId       String   // User who was referred
  referralCodeId  String   // Code used for referral
  status          ReferralStatus @default(PENDING)
  rewardAmount    Float?   // Amount earned by referrer
  discountAmount  Float?   // Discount given to referee
  metadata        Json?    // Additional data (source, campaign, etc.)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  completedAt     DateTime?

  // Relations
  referrer        User     @relation("ReferralsMade", fields: [referrerId], references: [id], onDelete: Cascade)
  referee         User     @relation("ReferralsReceived", fields: [refereeId], references: [id], onDelete: Cascade)
  referralCode    ReferralCode @relation("ReferralCodeUsed", fields: [referralCodeId], references: [id], onDelete: Cascade)
  rewards         ReferralReward[] @relation("ReferralRewards")

  @@unique([referrerId, refereeId])
  @@map("referrals")
}

model ReferralReward {
  id            String   @id @default(cuid())
  referralId    String
  referralCodeId String
  userId        String   // User who earned the reward
  amount        Float
  type          RewardType
  status        RewardStatus @default(PENDING)
  description   String?
  metadata      Json?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  paidAt        DateTime?

  // Relations
  referral      Referral @relation("ReferralRewards", fields: [referralId], references: [id], onDelete: Cascade)
  referralCode  ReferralCode @relation("ReferralCodeRewards", fields: [referralCodeId], references: [id], onDelete: Cascade)
  user          User     @relation("ReferralRewards", fields: [userId], references: [id], onDelete: Cascade)

  @@map("referral_rewards")
}

model ReferralCampaign {
  id          String   @id @default(cuid())
  name        String
  description String?
  isActive    Boolean  @default(true)
  startDate   DateTime
  endDate     DateTime?
  rules       Json     // Campaign rules and conditions
  rewards     Json     // Reward structure
  metadata    Json?    // Additional campaign data
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("referral_campaigns")
}

model ReferralAnalytics {
  id            String   @id @default(cuid())
  date          DateTime @db.Date
  totalReferrals Int
  successfulReferrals Int
  totalRewards  Float
  totalDiscounts Float
  conversionRate Float
  metadata      Json?
  createdAt     DateTime @default(now())

  @@unique([date])
  @@map("referral_analytics")
}

// Enums
enum ReferralStatus {
  PENDING
  COMPLETED
  CANCELLED
  EXPIRED
}

enum RewardType {
  CASH
  CREDIT
  DISCOUNT
  COURSE_ACCESS
  PREMIUM_FEATURES
}

enum RewardStatus {
  PENDING
  APPROVED
  PAID
  CANCELLED
  EXPIRED
}

// Extend User model with referral relations
model User {
  // ... existing fields ...
  
  // Referral relations
  referralCode        ReferralCode? @relation("ReferralCodeOwner")
  referralsMade       Referral[]    @relation("ReferralsMade")
  referralsReceived   Referral[]    @relation("ReferralsReceived")
  referralRewards     ReferralReward[] @relation("ReferralRewards")
  
  // Referral stats (computed fields)
  totalReferrals      Int           @default(0)
  successfulReferrals Int           @default(0)
  totalEarnings       Float         @default(0)
  referralRank        Int?          // Leaderboard position
}
